rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Helper function to check for faculty role
    function isFaculty() {
      return request.auth.token.role == 'faculty';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Admins can read/write any user profile.
      // Authenticated users can read/write their own profile.
      allow read, write: if isAdmin() || isOwner(userId);
    }
    
    // Classrooms collection
    match /classrooms/{classroomId} {
      // Admins can write. Any authenticated user can read.
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Booking Requests collection
    match /bookingRequests/{requestId} {
      // Admins can read/write all requests.
      // Faculty can create requests and read/update/delete their own.
      allow create: if isFaculty();
      allow read, update, delete: if isAdmin() || (isFaculty() && isOwner(resource.data.facultyId));
    }
    
    // Schedules collection
    match /schedules/{scheduleId} {
      // Admins can read/write all schedules.
      // Any authenticated user can read schedules (e.g., to see availability).
      // Faculty can only create/update/delete their own schedules.
      allow read: if request.auth != null;
      allow create: if isFaculty();
      allow update, delete: if isAdmin() || (isFaculty() && isOwner(resource.data.facultyId));
    }
    
    // Signup Requests collection
    match /signupRequests/{requestId} {
      // Anyone can create a signup request.
      // Admins can read/update/delete any request.
      // Users can read their own signup request status.
      allow create: if true;
      allow read, update, delete: if isAdmin() || isOwner(resource.data.uid);
    }
  }
}
