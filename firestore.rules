rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection
    match /users/{userId} {
      // Admin emails can read all users, others can read their own profile
      allow read: if request.auth != null && 
                    (request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'] ||
                     request.auth.uid == userId);
      // Allow users to update their own documents OR allow admin emails to write any user document
      allow write: if (request.auth != null && request.auth.uid == userId) || 
                      (request.auth != null && request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph']);
    }
    
    // Classrooms collection - Read for authenticated, write for admin only
    match /classrooms/{classroomId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'];
    }
    
    // Booking Requests collection
    match /bookingRequests/{requestId} {
      // Admin can read all, users can read their own
      allow read: if request.auth != null && 
                    (request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'] ||
                     resource.data.facultyId == request.auth.uid);
      // Anyone authenticated can create booking requests
      allow create: if request.auth != null;
      // Only admin can approve/reject, users can update their own pending requests
      allow update: if request.auth != null && 
                      (request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'] ||
                       (resource.data.facultyId == request.auth.uid && resource.data.status == 'pending'));
      // Only admin can delete booking requests
      allow delete: if request.auth != null && 
                      request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'];
    }
    
    // Schedules collection - Users can manage their own schedules, admin can manage all
    match /schedules/{scheduleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                      (resource.data.facultyId == request.auth.uid || 
                       request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph']);
      allow delete: if request.auth != null && 
                      (resource.data.facultyId == request.auth.uid || 
                       request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph']);
    }
    
    // Signup Requests collection - Restricted admin approval rules
    match /signupRequests/{requestId} {
      // Admin emails can read all signup requests, others can read their own
      allow read: if request.auth != null && 
                    (request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'] ||
                     resource.data.userId == request.auth.uid);
      // Allow anyone to create signup requests (for initial signup)
      allow create: if true;
      // Only admin emails can update (approve/reject) signup requests  
      allow update: if request.auth != null && 
                      request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'];
      // Only admin emails can delete signup requests
      allow delete: if request.auth != null && 
                      request.auth.token.email in ['admin@plv.edu.ph', 'registrar@plv.edu.ph'];
    }
  }
}
